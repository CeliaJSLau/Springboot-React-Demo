{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace_springboot_react_demo\\\\my-new-app\\\\src\\\\SkillTree.js\";\nimport React, { Component } from 'react';\nimport Tree from 'react-tree-graph';\nimport 'react-tree-graph/dist/style.css';\nimport MyNavbar from './MyNavbar';\n\nclass SkillTree extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      skills: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('api/skills').then(response => response.json()).then(data => this.setState({\n      skills: data\n    }));\n  }\n\n  render() {\n    const {\n      skills\n    } = this.state;\n    let frontArray = [];\n    let backendArray = [];\n    let databaseArray = [];\n    skills.forEach(skill => {\n      switch (skill.type) {\n        case 'Frontend':\n          frontArray.push({\n            name: skill.name\n          });\n          break;\n\n        case 'Backend':\n          backendArray.push({\n            name: skill.name\n          });\n          break;\n\n        case 'Database':\n          databaseArray.push({\n            name: skill.name\n          });\n          break;\n\n        default:\n          break;\n      }\n    });\n    const data = {\n      name: 'Skills',\n      children: [{\n        name: 'Frontend',\n        children: frontArray\n      }, {\n        name: 'Backend',\n        children: backendArray\n      }, {\n        name: 'Database',\n        children: databaseArray\n      }]\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MyNavbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"custom-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Tree, {\n      data: data,\n      height: 600,\n      width: 1150,\n      svgProps: {\n        className: 'custom'\n      },\n      animated: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default SkillTree;","map":{"version":3,"sources":["D:/workspace_springboot_react_demo/my-new-app/src/SkillTree.js"],"names":["React","Component","Tree","MyNavbar","SkillTree","constructor","props","state","skills","componentDidMount","fetch","then","response","json","data","setState","render","frontArray","backendArray","databaseArray","forEach","skill","type","push","name","children","className"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAO,iCAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAC9BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAb;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,YAAD,CAAL,CAAoBC,IAApB,CAAyBC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAArC,EACKF,IADL,CACUG,IAAI,IAAI,KAAKC,QAAL,CAAc;AAAEP,MAAAA,MAAM,EAAEM;AAAV,KAAd,CADlB;AAEH;;AAEDE,EAAAA,MAAM,GAAG;AACL,UAAM;AAAER,MAAAA;AAAF,QAAa,KAAKD,KAAxB;AACA,QAAIU,UAAU,GAAG,EAAjB;AACA,QAAIC,YAAY,GAAG,EAAnB;AACA,QAAIC,aAAa,GAAG,EAApB;AACAX,IAAAA,MAAM,CAACY,OAAP,CAAgBC,KAAD,IAAW;AACtB,cAAQA,KAAK,CAACC,IAAd;AACI,aAAK,UAAL;AACIL,UAAAA,UAAU,CAACM,IAAX,CAAgB;AAAEC,YAAAA,IAAI,EAAEH,KAAK,CAACG;AAAd,WAAhB;AACA;;AACJ,aAAK,SAAL;AACIN,UAAAA,YAAY,CAACK,IAAb,CAAkB;AAAEC,YAAAA,IAAI,EAAEH,KAAK,CAACG;AAAd,WAAlB;AACA;;AACJ,aAAK,UAAL;AACIL,UAAAA,aAAa,CAACI,IAAd,CAAmB;AAAEC,YAAAA,IAAI,EAAEH,KAAK,CAACG;AAAd,WAAnB;AACA;;AACJ;AACI;AAXR;AAaH,KAdD;AAeA,UAAMV,IAAI,GAAG;AACTU,MAAAA,IAAI,EAAE,QADG;AAETC,MAAAA,QAAQ,EAAE,CAAC;AACPD,QAAAA,IAAI,EAAE,UADC;AAEPC,QAAAA,QAAQ,EAAER;AAFH,OAAD,EAGR;AACEO,QAAAA,IAAI,EAAE,SADR;AAEEC,QAAAA,QAAQ,EAAEP;AAFZ,OAHQ,EAMR;AACEM,QAAAA,IAAI,EAAE,UADR;AAEEC,QAAAA,QAAQ,EAAEN;AAFZ,OANQ;AAFD,KAAb;AAaA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI,oBAAC,IAAD;AACI,MAAA,IAAI,EAAEL,IADV;AAEI,MAAA,MAAM,EAAE,GAFZ;AAGI,MAAA,KAAK,EAAE,IAHX;AAII,MAAA,QAAQ,EACJ;AAAEY,QAAAA,SAAS,EAAE;AAAb,OALR;AAOI,MAAA,QAAQ,MAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAFJ,CADJ;AAiBH;;AA7D6B;;AAiElC,eAAetB,SAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Tree from 'react-tree-graph';\r\nimport 'react-tree-graph/dist/style.css'\r\nimport MyNavbar from './MyNavbar';\r\n\r\nclass SkillTree extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { skills: [] };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('api/skills').then(response => response.json())\r\n            .then(data => this.setState({ skills: data }));\r\n    }\r\n\r\n    render() {\r\n        const { skills } = this.state;\r\n        let frontArray = [];\r\n        let backendArray = [];\r\n        let databaseArray = [];\r\n        skills.forEach((skill) => {\r\n            switch (skill.type) {\r\n                case 'Frontend':\r\n                    frontArray.push({ name: skill.name });\r\n                    break;\r\n                case 'Backend':\r\n                    backendArray.push({ name: skill.name });\r\n                    break;\r\n                case 'Database':\r\n                    databaseArray.push({ name: skill.name });\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n        const data = {\r\n            name: 'Skills',\r\n            children: [{\r\n                name: 'Frontend',\r\n                children: frontArray\r\n            },{\r\n                name: 'Backend',\r\n                children: backendArray\r\n            },{\r\n                name: 'Database',\r\n                children: databaseArray\r\n            }]\r\n        }\r\n        return (\r\n            <div >\r\n                <MyNavbar />\r\n                <div className=\"custom-container\">\r\n\r\n\r\n                    <Tree\r\n                        data={data}\r\n                        height={600}\r\n                        width={1150}\r\n                        svgProps={\r\n                            { className: 'custom' }\r\n                        }\r\n                        animated />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default SkillTree;"]},"metadata":{},"sourceType":"module"}